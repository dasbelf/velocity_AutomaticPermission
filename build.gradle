plugins {
    id 'java'
    id 'eclipse'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '1.1.8'
}

group = 'io.github.dasbelf'
version = '1.0-SNAPSHOT'

repositories {
    maven {
        name = 'papermc'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    annotationProcessor 'com.velocitypowered:velocity-api:3.4.0-SNAPSHOT'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'com.google.code.gson:gson:2.10.1'
}


task fatJar(type: Jar) {
    archiveClassifier.set("all")
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'io.github.dasbelf.AutomaticPermission'
    }
    from sourceSets.main.output

    // Der Trick: direkt mit configurations.runtimeClasspath, kein .get()
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

def targetJavaVersion = 17
java {
    toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.release.set(targetJavaVersion)
}

def templateSource = file('src/main/templates')
def templateDest = layout.buildDirectory.dir('generated/sources/templates')
def generateTemplates = tasks.register('generateTemplates', Copy) { task ->
    def props = ['version': project.version]
    task.inputs.properties props

    task.from templateSource
    task.into templateDest
    task.expand props
}

sourceSets.main.java.srcDir(generateTemplates.map { it.outputs })

project.idea.project.settings.taskTriggers.afterSync generateTemplates
project.eclipse.synchronizationTasks(generateTemplates)
